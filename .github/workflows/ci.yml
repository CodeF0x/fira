name: CI

on:
    pull_request:
        types: [opened, synchronize, reopened]

permissions:
    contents: read
    pull-requests: write

jobs:
    setup:
        name: Install Dependencies
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.x
                  cache: npm

            - name: Install dependencies
              run: npm ci

            - name: Cache node_modules
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

    lint:
        name: Lint Code
        needs: setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Restore node_modules cache
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

            - name: Run lint
              run: npm run lint

    test:
        name: Unit Tests and Coverage
        needs: [setup]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Restore node_modules cache
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

            - name: Add npm binaries to PATH
              run: echo "$HOME/.npm-global/bin" >> $GITHUB_PATH

            - name: Run Tests with Coverage
              run: npm run test:ci

            - name: Report Coverage to PR
              uses: davelosert/vitest-coverage-report-action@v2
              if: github.event_name == 'pull_request'
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload Coverage Reports as Artifact
              uses: actions/upload-artifact@v4
              with:
                  path: coverage/
                  name: coverage-report
                  if-no-files-found: ignore
